class Solution {
     ListNode* reverse(ListNode* head) {
        if(head==NULL || head->next==NULL)
            return head;
        ListNode*prev=NULL;
        ListNode*curr=head;
        ListNode*save=head->next;
        while(curr!=NULL){
            curr->next=prev;
            prev=curr;
            curr=save;
           if(curr!=NULL) save=curr->next;
        }
      /* curr->next=prev;
        prev=curr;*/
        return prev;
    }
public:
    bool isPalindrome(ListNode* head) {
        if(head==NULL || head->next==NULL)
            return head;
        ListNode*fast=head;
        ListNode*slow=head;
        ListNode*prev=NULL;
        while(fast!=NULL && fast->next!=NULL){
            prev=slow;
            slow=slow->next;
            fast=fast->next->next;
        }
        prev->next=NULL;
        slow=reverse(slow);
        while(head!=NULL && slow!=NULL){
            if(head->val==slow->val){
                head=head->next;
                slow=slow->next;
            }
            else 
                return false;
            
        }
        return true;
    }
};